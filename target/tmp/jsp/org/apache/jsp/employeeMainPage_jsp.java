/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: jetty/11.0.2
 * Generated at: 2021-06-05 05:55:37 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import java.util.List;
import com.ideas2it.employeemanagement.model.Employee;

public final class employeeMainPage_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("jar:file:/C:/Users/user019/.m2/repository/org/glassfish/web/jakarta.servlet.jsp.jstl/2.0.0/jakarta.servlet.jsp.jstl-2.0.0.jar!/META-INF/c.tld", Long.valueOf(1602854172000L));
    _jspx_dependants.put("file:/C:/Users/user019/.m2/repository/org/glassfish/web/jakarta.servlet.jsp.jstl/2.0.0/jakarta.servlet.jsp.jstl-2.0.0.jar", Long.valueOf(1622718503522L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("com.ideas2it.employeemanagement.model.Employee");
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"ISO-8859-1\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<style>\r\n");
      out.write("p {\r\n");
      out.write("\tfont-size: 120%;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("body {\r\n");
      out.write("\tbackground-image: url('download1.jpg');\r\n");
      out.write("\tbackground-repeat: no-repeat;\r\n");
      out.write("\tbackground-size: 1370px 670px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("ul {\r\n");
      out.write("\tlist-style-type: none;\r\n");
      out.write("\tmargin: 0;\r\n");
      out.write("\tpadding: 0;\r\n");
      out.write("\toverflow: hidden;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("li {\r\n");
      out.write("\tfloat: left;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("li a {\r\n");
      out.write("\tdisplay: block;\r\n");
      out.write("\tcolor: black;\r\n");
      out.write("\ttext-align: center;\r\n");
      out.write("\tpadding: 14px 16px;\r\n");
      out.write("\ttext-decoration: none;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("li a:hover:not(.active) {\r\n");
      out.write("\tbackground-color: #B4D7EF;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".container {\r\n");
      out.write("\twidth: 55%;\r\n");
      out.write("\theight: 42%;\r\n");
      out.write("\tposition: fixed;\r\n");
      out.write("\ttop: 40%;\r\n");
      out.write("\tleft: 28%;\r\n");
      out.write("\ttransform: translate(-50%, -50%);\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("table {\r\n");
      out.write("\tfont-family: arial, sans-serif;\r\n");
      out.write("\tborder-collapse: collapse;\r\n");
      out.write("\twidth: 190%;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("td, th {\r\n");
      out.write("\tborder: 1px solid #dddddd;\r\n");
      out.write("\ttext-align: center;\r\n");
      out.write("\tpadding: 6px;\r\n");
      out.write("\tcolor: black;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("p {\r\n");
      out.write("\tposition: fixed;\r\n");
      out.write("\tleft: 40%;\r\n");
      out.write("\ttop: 8%;\r\n");
      out.write("\tcolor: black;\r\n");
      out.write("\tfont-family: sans-serif;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("a {\r\n");
      out.write("\tcolor: black;\r\n");
      out.write("\tborder: none;\r\n");
      out.write("\tpadding: 3px 8px;\r\n");
      out.write("\ttext-decoration: none;\r\n");
      out.write("\tdisplay: inline-block;\r\n");
      out.write("\tfont-size: 16px;\r\n");
      out.write("\tfont-style: bold;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("button {\r\n");
      out.write("\tcolor: black;\r\n");
      out.write("\tborder: none;\r\n");
      out.write("\tpadding: 8px 18px;\r\n");
      out.write("\ttext-decoration: none;\r\n");
      out.write("\tdisplay: inline-block;\r\n");
      out.write("\tfont-size: 16px;\r\n");
      out.write("\tfont-style: bold;\r\n");
      out.write("\tbackground-color: #7DC2F0;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<ul>\r\n");
      out.write("\t\t<li><b><a href=\"EmployeeController?action=index\">HOME</a></b></li>\r\n");
      out.write("\t\t<li><b><a href=\"EmployeeController?action=employeeForm\">ADD\r\n");
      out.write("\t\t\t\t\tEMPLOYEE</a></b></li>\r\n");
      out.write("\r\n");
      out.write("\t\t<li><b><a href=\"EmployeeController?action=goToRestore\">RESTORE\r\n");
      out.write("\t\t\t\t\tEMPLOYEE</a></b></li>\r\n");
      out.write("\t</ul>\r\n");
      out.write("\t<p>\r\n");
      out.write("\t\t<b>List of all employees</b>\r\n");
      out.write("\t</p>\r\n");
      out.write("\t<div class=\"container\">\r\n");
      out.write("\t\t<table>\r\n");
      out.write("\t\t\t<thead>\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<th>Id</th>\r\n");
      out.write("\t\t\t\t\t<th>Name</th>\r\n");
      out.write("\t\t\t\t\t<th>Salary</th>\r\n");
      out.write("\t\t\t\t\t<th>Dob</th>\r\n");
      out.write("\t\t\t\t\t<th>Emailid</th>\r\n");
      out.write("\t\t\t\t\t<th>Mobile Number</th>\r\n");
      out.write("\t\t\t\t\t<th>Options</th>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t</thead>\r\n");
      out.write("\t\t\t<tbody>\r\n");
      out.write("\t\t\t\t");

				List<Employee> employeeValues = (List<Employee>)request.getAttribute("employeeList");
				
				for (Employee employees : employeeValues) {
      out.write("\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<td>");
      out.print(employees.getId());
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t<td>");
      out.print(employees.getName());
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t<td>");
      out.print(employees.getSalary());
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t<td>");
      out.print(employees.getDateOfBirth());
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t<td>");
      out.print(employees.getMobileNumber());
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t<td>");
      out.print(employees.getEmailId());
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t<td><a href=\"EmployeeController?action=goToEditEmployee&id=");
      out.print(employees.getId() );
      out.write("\"><button>Edit</button></a> \r\n");
      out.write("\t\t\t\t\t<a href=\"EmployeeController?action=deleteEmployee&id=");
      out.print(employees.getId() );
      out.write("\"><button>Delete</button></a> \r\n");
      out.write("\t\t\t\t\t<a href=\"EmployeeController?action=addressForm&id=");
      out.print(employees.getId() );
      out.write("\"><button>Add address</button></a> \r\n");
      out.write("\t\t\t\t\t<a href=\"EmployeeController?action=viewAddress&id=");
      out.print(employees.getId() );
      out.write("\"><button>View address</button></a> \r\n");
      out.write("\t\t\t\t\t<a href=\"EmployeeController?action=displayProject&id=");
      out.print(employees.getId() );
      out.write("\"><button>Assign</button></a> \r\n");
      out.write("\t\t\t\t\t<a href=\"EmployeeController?action=goToAssignedEmployee&id=");
      out.print(employees.getId() );
      out.write("\"><button>Unassign</button></a></td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t");
} 
      out.write("\r\n");
      out.write("\t\t\t</tbody>\r\n");
      out.write("\t\t</table>\r\n");
      out.write("\t\t</tbody>\r\n");
      out.write("\t\t</table>\r\n");
      out.write("\t</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
